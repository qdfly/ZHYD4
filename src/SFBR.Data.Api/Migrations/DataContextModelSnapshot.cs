// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SFBR.Data.Api.Infrastructure;

namespace SFBR.Data.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SFBR.Data.Api.Model.AlarmStatus", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("EquipNum")
                        .HasMaxLength(50);

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("AlarmStatuses");
                });

            modelBuilder.Entity("SFBR.Data.Api.Model.Current", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("EquipNum")
                        .HasMaxLength(50);

                    b.Property<string>("Position")
                        .HasMaxLength(50);

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.ToTable("Currents");
                });

            modelBuilder.Entity("SFBR.Data.Api.Model.Humidity", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("EquipNum")
                        .HasMaxLength(50);

                    b.Property<string>("Position")
                        .HasMaxLength(50);

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.ToTable("Humidities");
                });

            modelBuilder.Entity("SFBR.Data.Api.Model.SwitchStatus", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("EquipNum")
                        .HasMaxLength(50);

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("SwitchStatuses");
                });

            modelBuilder.Entity("SFBR.Data.Api.Model.Temperature", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("EquipNum")
                        .HasMaxLength(50);

                    b.Property<string>("Position")
                        .HasMaxLength(50);

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.ToTable("Temperatures");
                });

            modelBuilder.Entity("SFBR.Data.Api.Model.Voltage", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("EquipNum")
                        .HasMaxLength(50);

                    b.Property<string>("Position")
                        .HasMaxLength(50);

                    b.Property<double>("Value");

                    b.HasKey("Id");

                    b.ToTable("Voltages");
                });
#pragma warning restore 612, 618
        }
    }
}
